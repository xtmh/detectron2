COCO-Anotator によるアノテーションデータを活用

COCO-Anotatoerでjsonデータエクスポート
\\wsl.localhost\Ubuntu-22.04\home\yoshi\coco-annotator\datasets\Tomato\.exports

１．データセット登録（tmt_reg）
00  231012  "tomato"データセットにjsonデータセットを登録
01  231012  jsonデータセットを更新
10  231019  tmtフォルダへ移動
            Tomato.jsonに変更

-------------------------------------------------------------------------------------------
２．ト－レーニング（tmt_train）
"C:\Users\yoshi\detectron2\output\model_final.pth"を出力
00  231012  訓練コード
01  231012  "tomato"データセットのアノテーション画像を表示
            if __name__ == '__main__':　追記しエラー回避
            訓練データ出力（model_final.pth）
02  231013  学習データ更新
03  231013  学習データ更新
04  231013  学習データ更新
05  231016  MAX_ITERを300->600に変更
06  231018  学習データ更新
07  231018  Tomato.jsonに変更
10  231019  tmtフォルダへ移動



-------------------------------------------------------------------------------------------
３．テスト（tmt_tst）
"C:\Users\yoshi\detectron2\output\model_final.pth"でテスト
00  231012  model_final.pthをウェイトに設定
            インスタンスセグメンテーション処理
01  231012  画像にverを表示
            configを編集
02  231013  Visualizerでdraw_instance_predictionsを使わずbox,maskを個別に描画
03  231013  Visualizerを改変して矩形非表示に設定（boxes = None）
            学習データ更新
04  231013  学習データ更新
    231016  矩形描画を戻す
test231016  元画像表示用
05  231016  .draw_instance_predictionsを使わない設定
            矩形のみ描画
06  231016  矩形とマスクを描画
    231018  クラス毎の検出数を出力
            画像に文字表示テスト
07  231018  学習データ更新
08  231018  Tomato.jsonに変更
10  231019  tmtフォルダへ移動
            if文で画像表示を切替えできるように設定
11  231023  フォルダ内画像一括処理
            処理結果画像をdestフォルダに保存
12  231023  VisImageのsaveで保存
13  231023  csv出力を追加
14  231023  パラメータ初期化
15  231023  NMS_THRESH_TESTを調整して重なり検出を抑止